{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Ch02.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/shbae3423/dlwithtf/blob/master/%EC%82%BC%EC%84%B1%EC%A0%84%EC%9E%90%20%EC%A3%BC%EA%B0%80%EC%98%88%EC%B8%A1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UyhRmJWoUnOv",
        "colab_type": "text"
      },
      "source": [
        "# 02 최소한의 도구로 딥러닝을 시작합니다"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nEdRz5OvUnOw",
        "colab_type": "text"
      },
      "source": [
        "이 노트북을 주피터 노트북 뷰어(nbviewer.jupyter.org)로 보거나 구글 코랩(colab.research.google.com)에서 실행할 수 있습니다.\n",
        "\n",
        "<table class=\"tfo-notebook-buttons\" align=\"left\">\n",
        "  <td>\n",
        "    <a target=\"_blank\" href=\"https://nbviewer.jupyter.org/github/rickiepark/do-it-dl/blob/master/Ch02.ipynb\"><img src=\"https://jupyter.org/assets/main-logo.svg\" width=\"28\" />주피터 노트북 뷰어로 보기</a>\n",
        "  </td>\n",
        "  <td>\n",
        "    <a target=\"_blank\" href=\"https://colab.research.google.com/github/rickiepark/do-it-dl/blob/master/Ch02.ipynb\"><img src=\"https://www.tensorflow.org/images/colab_logo_32px.png\" />구글 코랩(Colab)에서 실행하기</a>\n",
        "  </td>\n",
        "</table>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "ANeYYLVfmz53"
      },
      "source": [
        "## 02-2 딥러닝을 위한 도구들을 알아봅니다"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "i6c2xjWYnAY6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "6bf21953-7322-488d-96da-97165c1cc817"
      },
      "source": [
        "import tensorflow as tf\n",
        "print(np.__version__)"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1.18.5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "v6MIiDoBoPXB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "1deb5f68-5392-4cea-e44c-e072f10e57fe"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from keras.models import Sequential\n",
        "from keras.layers import LSTM, Dropout, Dense, Activation\n",
        "import datetime\n"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Using TensorFlow backend.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "ZYdIzZlUqzRQ",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": "OK"
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 76
        },
        "outputId": "db101bf2-6437-4ea7-b260-77725be43454"
      },
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-e633b666-5667-4d99-81c8-17ea9af22f80\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-e633b666-5667-4d99-81c8-17ea9af22f80\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving 005930.KS.csv to 005930.KS.csv\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GHPcmymYUtdM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "data = pd.read_csv('005930.KS.csv')\n",
        "data.head()\n",
        "\n",
        "high_prices = data['High'].values\n",
        "low_prices = data['Low'].values\n",
        "mid_prices = (high_prices + low_prices)/2\n",
        "\n",
        "#Create Windows\n",
        "seq_len = 50\n",
        "sequence_length = seq_len +1\n",
        "\n",
        "result = []\n",
        "for index in range(len(mid_prices) - sequence_length):\n",
        " result.append(mid_prices[index : index+sequence_length])"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "WyB0D8g_t7lC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "5a7080c0-d2d3-4332-a1f6-b17804a79c72"
      },
      "source": [
        "#데이터 정규화(Normalize data)\n",
        "normalized_data =[]\n",
        "for window in result :\n",
        " normalized_window = [((float(p)/float(window[0]))-1) for p in window]\n",
        " normalized_data.append(normalized_window)\n",
        "\n",
        "result =np.array(normalized_data)\n",
        "#split train and test data\n",
        "row = int(round(result.shape[0]*0.9))\n",
        "train = result[:row,:]\n",
        "np.random.shuffle(train)\n",
        "\n",
        "x_train = train[:,:-1]\n",
        "x_train = np.reshape(x_train,(x_train.shape[0],x_train.shape[1],1))\n",
        "y_train = train[:,-1]\n",
        "\n",
        "x_test =result[row:,:-1]\n",
        "x_test = np.reshape(x_test,(x_test.shape[0],x_test.shape[1],1))\n",
        "y_test = result[row:,-1]\n",
        "\n",
        "x_train.shape,x_test.shape\n",
        "#((1057,50,1), (117,50,1)\n",
        "##1057데이터를 가지고 학습해서, 117일을 예측\t\n"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((1016, 50, 1), (113, 50, 1))"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "-E8JBNIJu0v_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "6e453d42-b5af-4e50-8b3a-12fc47da1291"
      },
      "source": [
        "#Build a Model\n",
        "model = Sequential()\n",
        "model.add(LSTM(50,return_sequences = True, input_shape=(50,1)))\n",
        "model.add(LSTM(64,return_sequences = False))\n",
        "model.add(Dense(1,activation ='linear'))\n",
        "model.compile(loss='mse',optimizer='rmsprop')\n",
        "\n",
        "model.summary()\n",
        "\n",
        "#Training\n",
        "model.fit(x_train,y_train,\n",
        "validation_data=(x_test,y_test),\n",
        "batch_size=10,\n",
        "epochs=20)\n",
        "## 트레이닝 시작함\n",
        "\n",
        "\n",
        "#Prediction\n",
        "pred = model.predict(x_test)\n",
        "\n",
        "fig = plt.figure(facecolor='white')\n",
        "ax = fig.add_subplot(111)\n",
        "ax.plot(y_test,label='True')\n",
        "ax.plot(pred,label='Prediction')\n",
        "ax.legend()\n",
        "plt.show()"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "lstm_1 (LSTM)                (None, 50, 50)            10400     \n",
            "_________________________________________________________________\n",
            "lstm_2 (LSTM)                (None, 64)                29440     \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 1)                 65        \n",
            "=================================================================\n",
            "Total params: 39,905\n",
            "Trainable params: 39,905\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Train on 1016 samples, validate on 113 samples\n",
            "Epoch 1/20\n",
            "1016/1016 [==============================] - 5s 5ms/step - loss: 0.0015 - val_loss: 7.9201e-04\n",
            "Epoch 2/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 7.5428e-04 - val_loss: 7.4000e-04\n",
            "Epoch 3/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 5.4721e-04 - val_loss: 3.7511e-04\n",
            "Epoch 4/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 4.4556e-04 - val_loss: 3.0246e-04\n",
            "Epoch 5/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 3.5140e-04 - val_loss: 3.4253e-04\n",
            "Epoch 6/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 3.0900e-04 - val_loss: 1.8632e-04\n",
            "Epoch 7/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.6599e-04 - val_loss: 1.7446e-04\n",
            "Epoch 8/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.4966e-04 - val_loss: 1.7421e-04\n",
            "Epoch 9/20\n",
            "1016/1016 [==============================] - 5s 4ms/step - loss: 2.3036e-04 - val_loss: 1.8064e-04\n",
            "Epoch 10/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.2806e-04 - val_loss: 1.6387e-04\n",
            "Epoch 11/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.3753e-04 - val_loss: 5.7800e-04\n",
            "Epoch 12/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.3005e-04 - val_loss: 1.7079e-04\n",
            "Epoch 13/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.3132e-04 - val_loss: 1.7727e-04\n",
            "Epoch 14/20\n",
            "1016/1016 [==============================] - 5s 4ms/step - loss: 2.3013e-04 - val_loss: 1.8437e-04\n",
            "Epoch 15/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.2126e-04 - val_loss: 2.1539e-04\n",
            "Epoch 16/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.2449e-04 - val_loss: 1.6529e-04\n",
            "Epoch 17/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.2403e-04 - val_loss: 1.8610e-04\n",
            "Epoch 18/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.2001e-04 - val_loss: 1.5242e-04\n",
            "Epoch 19/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.1838e-04 - val_loss: 1.6526e-04\n",
            "Epoch 20/20\n",
            "1016/1016 [==============================] - 4s 4ms/step - loss: 2.1689e-04 - val_loss: 1.6494e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "FYRVVtpCzHC_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "c2521c03-6e23-444c-eec3-5d8e7f7885ec"
      },
      "source": [
        "pred"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-0.11658654],\n",
              "       [-0.14199342],\n",
              "       [-0.13950804],\n",
              "       [-0.1302392 ],\n",
              "       [-0.1135727 ],\n",
              "       [-0.08071237],\n",
              "       [-0.05936567],\n",
              "       [-0.04988898],\n",
              "       [-0.01365677],\n",
              "       [-0.0057382 ],\n",
              "       [-0.01450018],\n",
              "       [ 0.00062431],\n",
              "       [ 0.02316644],\n",
              "       [ 0.02716829],\n",
              "       [ 0.01969018],\n",
              "       [-0.01847503],\n",
              "       [-0.01720743],\n",
              "       [-0.04269078],\n",
              "       [-0.01455936],\n",
              "       [-0.01148974],\n",
              "       [-0.04085542],\n",
              "       [-0.03708488],\n",
              "       [ 0.0107855 ],\n",
              "       [-0.00840455],\n",
              "       [-0.02269805],\n",
              "       [ 0.00431283],\n",
              "       [ 0.03014566],\n",
              "       [ 0.0185039 ],\n",
              "       [ 0.01264598],\n",
              "       [ 0.0200382 ],\n",
              "       [-0.01198941],\n",
              "       [-0.01292559],\n",
              "       [-0.04676656],\n",
              "       [-0.03224255],\n",
              "       [-0.03423517],\n",
              "       [-0.02314057],\n",
              "       [-0.06332553],\n",
              "       [-0.05810034],\n",
              "       [-0.06441448],\n",
              "       [-0.05385828],\n",
              "       [-0.04682297],\n",
              "       [-0.04876663],\n",
              "       [-0.04333837],\n",
              "       [-0.05391969],\n",
              "       [-0.0764064 ],\n",
              "       [-0.09101465],\n",
              "       [-0.13276382],\n",
              "       [-0.10456827],\n",
              "       [-0.08048944],\n",
              "       [-0.06930391],\n",
              "       [-0.0387151 ],\n",
              "       [-0.04172789],\n",
              "       [-0.00369705],\n",
              "       [-0.02670803],\n",
              "       [-0.05012761],\n",
              "       [-0.04351821],\n",
              "       [-0.03130195],\n",
              "       [-0.04560418],\n",
              "       [-0.04749529],\n",
              "       [-0.06177324],\n",
              "       [-0.06742699],\n",
              "       [-0.08424813],\n",
              "       [-0.07589196],\n",
              "       [-0.08233389],\n",
              "       [-0.10133473],\n",
              "       [-0.08916433],\n",
              "       [-0.05277462],\n",
              "       [-0.0692183 ],\n",
              "       [-0.0676984 ],\n",
              "       [-0.04512074],\n",
              "       [-0.03276667],\n",
              "       [-0.04500346],\n",
              "       [-0.06069874],\n",
              "       [-0.05380232],\n",
              "       [-0.08289053],\n",
              "       [-0.13003373],\n",
              "       [-0.13858163],\n",
              "       [-0.12707062],\n",
              "       [-0.14823845],\n",
              "       [-0.12994014],\n",
              "       [-0.13183579],\n",
              "       [-0.11115647],\n",
              "       [-0.13407503],\n",
              "       [-0.129833  ],\n",
              "       [-0.14646687],\n",
              "       [-0.11122397],\n",
              "       [-0.12485276],\n",
              "       [-0.12934549],\n",
              "       [-0.11990136],\n",
              "       [-0.1380864 ],\n",
              "       [-0.13490105],\n",
              "       [-0.12620632],\n",
              "       [-0.11011559],\n",
              "       [-0.12836497],\n",
              "       [-0.1350934 ],\n",
              "       [-0.06038443],\n",
              "       [-0.05986326],\n",
              "       [-0.05757074],\n",
              "       [-0.0508243 ],\n",
              "       [-0.05829683],\n",
              "       [-0.05833036],\n",
              "       [-0.07386077],\n",
              "       [-0.05325899],\n",
              "       [-0.03728107],\n",
              "       [-0.0429373 ],\n",
              "       [-0.05341815],\n",
              "       [-0.04828073],\n",
              "       [-0.06522338],\n",
              "       [-0.02203904],\n",
              "       [ 0.00823696],\n",
              "       [ 0.02684303],\n",
              "       [ 0.01332525],\n",
              "       [ 0.04590132]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "0WALSGtj0V1I",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "outputId": "e9fbf395-f667-44f2-d763-f809f293e017"
      },
      "source": [
        "# CPU 사양\n",
        "!head /proc/cpuinfo"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "processor\t: 0\n",
            "vendor_id\t: GenuineIntel\n",
            "cpu family\t: 6\n",
            "model\t\t: 79\n",
            "model name\t: Intel(R) Xeon(R) CPU @ 2.20GHz\n",
            "stepping\t: 0\n",
            "microcode\t: 0x1\n",
            "cpu MHz\t\t: 2200.144\n",
            "cache size\t: 56320 KB\n",
            "physical id\t: 0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "Q82Hyhri1Cc5"
      },
      "source": [
        "<퀴즈>\n",
        "`my_arr` 배열의 두 번째 행의 첫 번째 원소를 `print()` 함수로 출력해 보세요."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "eWjHmkPJ1Q_k",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "9bf30a0d-c7f3-4876-98d9-76252ebecb35"
      },
      "source": [
        "!python --version"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Python 3.6.9\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "uA7hgZMSfEdI",
        "colab": {}
      },
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "9a5QBQ0DhF9d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 347
        },
        "outputId": "75bdd20a-3ab0-4f2d-b819-be367d1508d7"
      },
      "source": [
        "plt.plot([1, 2, 3, 4, 5], [1, 4, 9, 16, 25]) # x 좌표와 y 좌표를 파이썬 리스트로 전달합니다.\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "cTM7QMQPCDPg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 347
        },
        "outputId": "d79836ec-af46-4c82-fb1e-f03b79c3e71c"
      },
      "source": [
        "plt.scatter([1, 2, 3, 4, 5], [1, 4, 9, 16, 25])\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "id": "1oUskZcrD0Wp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 347
        },
        "outputId": "29ae4acf-2e6a-4599-fd3f-65e5d19f0683"
      },
      "source": [
        "x = np.random.randn(1000) # 표준 정규 분포를 따르는 난수 1,000개를 만듭니다.\n",
        "y = np.random.randn(1000) # 표준 정규 분포를 따르는 난수 1,000개를 만듭니다.\n",
        "plt.scatter(x, y)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}